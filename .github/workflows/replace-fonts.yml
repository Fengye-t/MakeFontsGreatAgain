#!/usr/bin/env bash
set -e

# ========== 配置路径 ==========
# 解压后源字体目录（需与实际解压路径一致）
EXTRACTED_FONT_DIR="extracted-latest-module/system/fonts"
# 目标字体目录（模块最终要替换的路径）
TARGET_FONT_DIR="system/fonts"
# 冗余字体文件（要删除的文件）
REDUNDANT_FONTS=("SysSans-En-Regular.ttf" "SysFont-Regular.ttf")

# ========== 步骤1：确保目标目录存在 ==========
echo "🔍 确保目标字体目录 $TARGET_FONT_DIR 存在..."
mkdir -p "$TARGET_FONT_DIR"
echo "✅ 目标目录已准备好"

# ========== 步骤2：复制需要的字体文件（检查源文件存在性） ==========
echo "🔄 开始复制字体文件..."

# 定义需要复制的字体列表（源文件名 → 目标文件名）
declare -A FONT_MAPPING=(
    ["NotoSansSC.ttf"]="NotoSansSC.ttf"
    ["RobotoFlex-Regular.ttf"]="RobotoFlex-Regular.ttf"
    ["Roboto-Regular.ttf"]="Roboto-Regular.ttf"
    ["Roboto-Italic.ttf"]="Roboto-Italic.ttf"
)

for src_font in "${!FONT_MAPPING[@]}"; do
    dest_font="${FONT_MAPPING[$src_font]}"
    src_path="$EXTRACTED_FONT_DIR/$src_font"
    dest_path="$TARGET_FONT_DIR/$dest_font"

    if [ -f "$src_path" ]; then
        cp -f "$src_path" "$dest_path"
        echo "✅ 已复制：$src_path → $dest_path"
    else
        echo "⚠️ 警告：源文件 $src_path 不存在，跳过复制"
    fi
done

# ========== 步骤3：删除冗余字体文件（检查文件存在性） ==========
echo "🗑️  开始清理冗余字体文件..."
for font in "${REDUNDANT_FONTS[@]}"; do
    font_path="$TARGET_FONT_DIR/$font"
    if [ -f "$font_path" ]; then
        rm -f "$font_path"
        echo "✅ 已删除冗余文件：$font_path"
    else
        echo "ℹ️ 提示：冗余文件 $font_path 不存在，无需删除"
    fi
done

echo "🎉 字体替换与清理完成！"
