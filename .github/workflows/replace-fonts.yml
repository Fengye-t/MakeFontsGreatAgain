name: 自动替换字体并发布Release（含数字Tag触发版）
on:
  push:
    tags:
      - '*[0-9]*'  # Tag中包含任意数字即触发（如v1.0、mfga2024、v3-beta等）
  workflow_dispatch: # 保留手动触发，方便测试

jobs:
  replace-and-release:
    runs-on: ubuntu-latest
    steps:
      # 步骤1：检出仓库代码
      - name: 检出仓库代码
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      # 步骤2：获取并解压最新Release的MFGA模块（筛选含MFGA的.zip）
      - name: 自动获取并下载最新MFGA模块
        run: |
          # 获取最新Release中含"MFGA"关键词的.zip模块链接
          MODULE_URL=$(curl -s "https://api.github.com/repos/Fengye-t/MakeFontsGreatAgain/releases/latest" | jq -r '.assets[] | select(.name | endswith(".zip") and contains("MFGA")) | .browser_download_url')
          
          # 校验模块链接有效性
          if [ -z "$MODULE_URL" ] || [ "$MODULE_URL" = "null" ]; then
            echo "❌ 错误：最新Release中未找到含MFGA关键词的.zip模块"
            exit 1
          fi
          echo "✅ 找到MFGA模块链接：$MODULE_URL"
          
          # 下载模块（带重试机制）
          wget -O mfga-latest-module.zip "$MODULE_URL" --no-verbose --tries=3 --timeout=30
          
          # 安装7z并解压模块
          sudo apt-get update && sudo apt-get install -y p7zip-full
          7z x mfga-latest-module.zip -oextracted-latest-module
          
          # 验证字体目录存在
          FONT_DIR="extracted-latest-module/system/fonts"
          if [ ! -d "$FONT_DIR" ]; then
            echo "❌ 错误：MFGA模块解压后未找到字体目录 $FONT_DIR"
            exit 1
          fi
          echo "✅ MFGA模块字体目录存在，文件列表："
          ls -l "$FONT_DIR"

      # 步骤3：替换特定Roboto字体文件（仅更新目标字体）
      - name: 替换特定Roboto字体文件
        run: |
          EXTRACTED_FONT_DIR="extracted-latest-module/system/fonts"
          TARGET_FONT_DIR="system/fonts"
          mkdir -p "$TARGET_FONT_DIR"
          
          # 仅复制3个特定Roboto字体
          cp -f "$EXTRACTED_FONT_DIR/RobotoFlex-Regular.ttf" "$TARGET_FONT_DIR/"
          cp -f "$EXTRACTED_FONT_DIR/Roboto-Regular.ttf" "$TARGET_FONT_DIR/"
          cp -f "$EXTRACTED_FONT_DIR/Roboto-Italic.ttf" "$TARGET_FONT_DIR/"
          
          echo "✅ 特定Roboto字体替换完成，目标目录文件："
          ls -l "$TARGET_FONT_DIR"

      # 步骤4：构建模块压缩包（保留原始文件，仅更新字体）
      - name: 构建MFGA更新包
        run: |
          MODULE_NAME="MakeFontsGreatAgain-Updated.zip"
          
          # 解压原始模块到临时目录（保留所有文件）
          mkdir -p temp-original-module
          7z x mfga-latest-module.zip -otemp-original-module
          
          # 覆盖字体文件（仅更新字体，其他文件不变）
          cp -rf "$TARGET_FONT_DIR"/* "temp-original-module/system/fonts/"
          
          # 重新打包
          cd temp-original-module
          zip -r "../$MODULE_NAME" ./*
          cd ..
          
          echo "✅ MFGA更新包构建完成：$MODULE_NAME"
          # 验证关键文件
          echo "📁 验证更新包内容："
          unzip -l "$MODULE_NAME" | grep -E "Roboto|system/fonts|META-INF"

      # 步骤5：发布到关联Tag的Release
      - name: 发布更新包到GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: "MakeFontsGreatAgain-Updated.zip"
          tag_name: ${{ github.ref_name }}  # 自动关联触发工作流的Tag
          append_body: |
            ### 📦 自动更新说明
            - 仅更新 **Roboto系列字体**（RobotoFlex-Regular.ttf、Roboto-Regular.ttf、Roboto-Italic.ttf）
            - 保留原始MFGA模块所有文件结构，无额外修改
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
