name: 自动替换字体（从最新Release模块提取，7z解压版）
on:
  workflow_dispatch: # 手动触发
  schedule:
    - cron: '0 0 * * *' # 每天0点自动触发（可选）

jobs:
  replace-fonts:
    runs-on: ubuntu-latest
    steps:
      # 步骤1：检出仓库代码
      - name: 检出仓库代码
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      # 步骤2：自动获取并下载最新Release的Magisk模块
      - name: 自动获取并下载最新Release的Magisk模块
        run: |
          # 获取最新Release的模块下载链接
          MODULE_URL=$(curl -s "https://api.github.com/repos/Fengye-t/MakeFontsGreatAgain/releases/latest" | jq -r '.assets[] | select(.name | endswith(".zip") and contains("MakeFontsGreatAgain")) | .browser_download_url')
          
          # 检查是否获取到有效链接
          if [ -z "$MODULE_URL" ]; then
            echo "❌ 错误：未找到符合条件的最新Release模块"
            exit 1
          fi
          echo "✅ 找到最新模块下载链接：$MODULE_URL"
          
          # 下载模块
          wget -O mfga-latest-module.zip "$MODULE_URL" --no-verbose
          
          # 安装7z（增强解压兼容性）
          sudo apt-get update
          sudo apt-get install -y p7zip-full
          
          # 用7z解压模块
          7z x mfga-latest-module.zip -oextracted-latest-module
          
          # 验证解压结果（检查字体目录）
          FONT_DIR="extracted-latest-module/system/fonts"
          if [ ! -d "$FONT_DIR" ]; then
            echo "❌ 错误：解压后未找到字体目录 $FONT_DIR"
            exit 1
          fi
          echo "✅ 字体目录存在，文件列表："
          ls -l "$FONT_DIR"

      # 步骤3：提取新字体并替换（假设解压后字体路径正确，可根据实际调整）
      - name: 提取新字体并替换
        run: |
          EXTRACTED_FONT_DIR="extracted-latest-module/system/fonts"
          TARGET_FONT_DIR="system/fonts"
          
          # 确保目标字体目录存在
          mkdir -p "$TARGET_FONT_DIR"
          
          # 替换字体文件（以NotoSansSC.ttf等为例，根据实际字体文件调整）
          cp -f "$EXTRACTED_FONT_DIR/NotoSansSC.ttf" "$TARGET_FONT_DIR/NotoSansSC.ttf"
          cp -f "$EXTRACTED_FONT_DIR/RobotoFlex-Regular.ttf" "$TARGET_FONT_DIR/RobotoFlex-Regular.ttf"
          cp -f "$EXTRACTED_FONT_DIR/Roboto-Regular.ttf" "$TARGET_FONT_DIR/Roboto-Regular.ttf"
          cp -f "$EXTRACTED_FONT_DIR/Roboto-Italic.ttf" "$TARGET_FONT_DIR/Roboto-Italic.ttf"
          
          # 删除冗余字体文件（可选，根据需求）
          rm -f "$TARGET_FONT_DIR/SysSans-En-Regular.ttf" "$TARGET_FONT_DIR/SysFont-Regular.ttf"

      # 步骤4：构建模块压缩包（根据实际模块结构调整）
      - name: 构建模块压缩包
        run: |
          MODULE_NAME="MakeFontsGreatAgain-Updated.zip"
          zip -r "$MODULE_NAME" system META-INF action.sh update.json # 根据实际模块包含的文件调整
          echo "✅ 模块压缩包构建完成：$MODULE_NAME"

      # 步骤5：发布到GitHub Release（可选，若需要自动发布）
      - name: 发布到GitHub Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/') # 仅在打标签时触发
        with:
          files: "MakeFontsGreatAgain-Updated.zip"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
