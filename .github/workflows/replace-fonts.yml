name: 自动替换字体并发布Release（含数字Tag触发版）
on:
  push:
    tags:
      - '*'  # 匹配所有Tag
  workflow_dispatch: # 手动触发

jobs:
  replace-and-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      # 步骤1：检出仓库代码
      - name: 检出仓库代码
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
          persist-credentials: true

      # 步骤2：获取并解压最新MFGA模块（修复7z参数）
      - name: 自动获取并下载最新MFGA模块
        run: |
          MODULE_URL=$(curl -s "https://api.github.com/repos/Fengye-t/MakeFontsGreatAgain/releases/latest" | jq -r '.assets[] | select(.name | endswith(".zip") and contains("MFGA")) | .browser_download_url')
          if [ -z "$MODULE_URL" ] || [ "$MODULE_URL" = "null" ]; then
            echo "❌ 错误：未找到含MFGA关键词的.zip模块"
            exit 1
          fi
          wget -O mfga-latest-module.zip "$MODULE_URL" --no-verbose --tries=3 --timeout=30
          if [ ! -f "mfga-latest-module.zip" ] || [ $(stat -c%s "mfga-latest-module.zip") -lt 1024 ]; then
            echo "❌ 错误：模块下载不完整或损坏"
            exit 1
          fi
          sudo apt-get update && sudo apt-get install -y p7zip-full tree
          mkdir -p extracted-latest-module
          7z x mfga-latest-module.zip -oextracted-latest-module -xr!*.lnk -xr!*.symlink
          FONT_DIR=$(find extracted-latest-module -type d -name "fonts" | grep "system/fonts" | head -n1)
          if [ -z "$FONT_DIR" ]; then
            echo "❌ 错误：未找到 system/fonts 目录，解压结构："
            tree extracted-latest-module
            exit 1
          fi
          echo "FONT_DIR=$FONT_DIR" >> $GITHUB_ENV

      # 步骤3：替换特定Roboto字体文件
      - name: 替换特定Roboto字体文件
        run: |
          TARGET_FONT_DIR="system/fonts"
          mkdir -p "$TARGET_FONT_DIR"
          REQUIRED_FONTS=("RobotoFlex-Regular.ttf" "Roboto-Regular.ttf" "Roboto-Italic.ttf")
          for FONT in "${REQUIRED_FONTS[@]}"; do
            if [ ! -f "${{ env.FONT_DIR }}/$FONT" ]; then
              echo "❌ 错误：原始模块缺失字体 $FONT"
              exit 1
            fi
          done
          cp -f "${{ env.FONT_DIR }}/"*.ttf "$TARGET_FONT_DIR/"
          ls -l "$TARGET_FONT_DIR"

      # 步骤4：构建MFGA更新包（修复模块根目录定位）
      - name: 构建MFGA更新包
        run: |
          MODULE_NAME="MakeFontsGreatAgain-Updated.zip"
          # 直接使用解压后的根目录 extracted-latest-module
          MODULE_ROOT="extracted-latest-module"
          if [ ! -d "$MODULE_ROOT/system" ] || [ ! -d "$MODULE_ROOT/product" ]; then  # 校验核心子目录存在
            echo "❌ 错误：模块根目录结构异常，当前结构："
            tree "$MODULE_ROOT"
            exit 1
          fi
          echo "✅ 找到模块根目录：$MODULE_ROOT"

          mkdir -p temp-build
          sudo cp -rf --no-preserve=mode "$MODULE_ROOT"/* temp-build/
          sudo chmod -R 755 temp-build/
          sudo cp -f "system/fonts"/* "temp-build/system/fonts/"
          cd temp-build
          zip -r "../$MODULE_NAME" ./* -x ".*" -x "__MACOSX/*"
          cd ..
          if [ ! -f "$MODULE_NAME" ] || [ $(stat -c%s "$MODULE_NAME") -lt 1024 ]; then
            echo "❌ 错误：更新包构建失败"
            exit 1
          fi
          sudo chmod 644 "$MODULE_NAME"
          unzip -l "$MODULE_NAME" | grep -E "Roboto|system/fonts|META-INF"

      # 步骤5：发布到关联Tag的Release
      - name: 发布更新包到GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: "MakeFontsGreatAgain-Updated.zip"
          tag_name: ${{ github.ref_name }}
          append_body: |
            ### 📦 自动更新说明
            - 仅更新 **Roboto系列字体**
            - 保留原始MFGA模块所有文件结构
          retry-count: 3
          retry-delay: 10
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
