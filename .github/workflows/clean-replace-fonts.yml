name: 手动清理 replace-fonts.yml 工作流历史记录
on:
  workflow_dispatch:
    inputs:
      workflow_status:
        type: choice
        description: "选择要清理的工作流状态："
        required: true
        options:
          - 失败 (failed)
          - 取消 (cancelled)
          - 成功 (success)
      days_old:
        type: number
        description: "清理多少天前的记录？（0 = 清理所有该状态记录，需为非负整数）"
        required: true
        default: 7
      dry_run:
        type: boolean
        description: "是否开启模拟清理？"
        required: true
        default: false

jobs:
  clean-workflow-runs:
    runs-on: ubuntu-latest
    steps:
      - name: 安装 GitHub CLI
        run: |
          curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null
          sudo apt-get update && sudo apt-get install -y gh

      - name: 配置 GitHub CLI 认证
        run: gh auth login --with-token <<< ${{ secrets.GITHUB_TOKEN }}

      - name: 映射工作流状态
        id: map_status
        run: |
          case "${{ github.event.inputs.workflow_status }}" in
            "失败 (failed)") echo "STATUS=failed" >> $GITHUB_ENV ;;
            "取消 (cancelled)") echo "STATUS=cancelled" >> $GITHUB_ENV ;;
            "成功 (success)") echo "STATUS=success" >> $GITHUB_ENV ;;
          esac

      - name: 校验并转换 days_old 为整数
        id: validate_days
        run: |
          DAYS_OLD=${{ github.event.inputs.days_old }}
          # 转换为整数（舍去小数部分）
          INT_DAYS=$(printf "%.0f" "$DAYS_OLD")
          
          # 校验是否为非负整数
          if ! [[ "$INT_DAYS" =~ ^[0-9]+$ ]] || [ "$INT_DAYS" -lt 0 ]; then
            echo "❌ 错误：days_old 必须为非负整数，当前值：$DAYS_OLD"
            exit 1
          fi
          
          echo "INT_DAYS=$INT_DAYS" >> $GITHUB_ENV
          echo "✅ days_old 已转换为整数：$INT_DAYS"

      - name: 计算清理时间范围
        id: calc_time
        run: |
          INT_DAYS=${{ env.INT_DAYS }}
          if [ "$INT_DAYS" -eq 0 ]; then
            echo "SINCE=0" >> $GITHUB_ENV
            echo "📅 清理所有 ${STATUS} 状态的工作流记录"
          else
            SINCE=$(date -d "$INT_DAYS days ago" +%s)
            echo "SINCE=$SINCE" >> $GITHUB_ENV
            echo "📅 清理时间范围：$(date -d "@$SINCE" +"%Y-%m-%d %H:%M:%S") 之前的 ${STATUS} 记录"
          fi

      - name: 获取待清理的工作流记录 ID
        id: get_run_ids
        run: |
          OWNER=${{ github.repository_owner }}
          REPO=${{ github.event.repository.name }}
          WORKFLOW_FILE="replace-fonts.yml"

          WORKFLOW_ID=$(gh api repos/$OWNER/$REPO/actions/workflows --jq ".workflows[] | select(.path == \".github/workflows/$WORKFLOW_FILE\") | .id")
          if [ -z "$WORKFLOW_ID" ]; then
            echo "❌ 错误：未找到工作流文件 .github/workflows/$WORKFLOW_FILE"
            exit 1
          fi
          echo "✅ 找到工作流 ID：$WORKFLOW_ID"

          RUN_IDS=$(gh api repos/$OWNER/$REPO/actions/workflows/$WORKFLOW_ID/runs \
            --paginate \
            --jq "[.workflow_runs[] | select(.conclusion == \"${{ env.STATUS }}\" and .created_at | sub(\"\\+.*\";\"\") | strptime(\"%Y-%m-%dT%H:%M:%S\") | mktime < ${{ env.SINCE }}) | .id] | join(\" \")")

          if [ -z "$RUN_IDS" ] || [ "$RUN_IDS" = "[]" ]; then
            echo "ℹ️ 未找到符合条件的记录"
            echo "RUN_IDS=" >> $GITHUB_ENV
          else
            echo "✅ 找到 $(echo $RUN_IDS | wc -w) 条待清理记录"
            echo "RUN_IDS=$RUN_IDS" >> $GITHUB_ENV
          fi

      - name: 执行清理（或模拟清理）
        if: env.RUN_IDS != ''
        run: |
          OWNER=${{ github.repository_owner }}
          REPO=${{ github.event.repository.name }}
          DRY_RUN=${{ github.event.inputs.dry_run }}
          RUN_IDS=(${{ env.RUN_IDS }})

          echo "========================================"
          if [ "$DRY_RUN" = "true" ]; then
            echo "📝 模拟清理模式"
          else
            echo "⚠️ 实际清理模式"
          fi
          echo "========================================"

          for ID in "${RUN_IDS[@]}"; do
            RUN_INFO=$(gh api repos/$OWNER/$REPO/actions/runs/$ID --jq "{created_at: .created_at, run_number: .run_number}")
            CREATED_AT=$(echo $RUN_INFO | jq -r .created_at | sed 's/T/ /; s/Z//')
            RUN_NUMBER=$(echo $RUN_INFO | jq -r .run_number)

            if [ "$DRY_RUN" = "true" ]; then
              echo "✅ 模拟清理：#$RUN_NUMBER（ID：$ID），创建时间：$CREATED_AT"
            else
              echo "🗑️ 清理中：#$RUN_NUMBER（ID：$ID），创建时间：$CREATED_AT"
              gh api repos/$OWNER/$REPO/actions/runs/$ID -X DELETE --confirm
              echo "✅ 清理完成：ID $ID"
            fi
          done

          echo "========================================"
          if [ "$DRY_RUN" = "true" ]; then
            echo "📝 模拟清理完成，共 ${#RUN_IDS[@]} 条记录"
          else
            echo "✅ 实际清理完成，共 ${#RUN_IDS[@]} 条记录"
          fi
